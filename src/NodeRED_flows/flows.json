[
    {
        "id": "463027935fb6458f",
        "type": "tab",
        "label": "TinkerforgeModule",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "9de851f9017f508c",
        "type": "tab",
        "label": "CSV-Test",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "9ab9769d30aa5a24",
        "type": "tab",
        "label": "Dashboard",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "c0bbce27fa066182",
        "type": "tab",
        "label": "FileBrowser",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "629839eca15c1379",
        "type": "mqtt-broker",
        "name": "Tinkerforge",
        "broker": "localhost",
        "port": "1883",
        "clientid": "",
        "autoConnect": true,
        "usetls": false,
        "protocolVersion": "4",
        "keepalive": "60",
        "cleansession": true,
        "birthTopic": "",
        "birthQos": "0",
        "birthPayload": "",
        "birthMsg": {},
        "closeTopic": "",
        "closeQos": "0",
        "closePayload": "",
        "closeMsg": {},
        "willTopic": "",
        "willQos": "0",
        "willPayload": "",
        "willMsg": {},
        "userProps": "",
        "sessionExpiry": ""
    },
    {
        "id": "7d2b06ffee1c4579",
        "type": "ui_tab",
        "name": "Home",
        "icon": "dashboard",
        "disabled": false,
        "hidden": false
    },
    {
        "id": "301e355085583749",
        "type": "ui_base",
        "theme": {
            "name": "theme-dark",
            "lightTheme": {
                "default": "#0094CE",
                "baseColor": "#0094CE",
                "baseFont": "-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Oxygen-Sans,Ubuntu,Cantarell,Helvetica Neue,sans-serif",
                "edited": true,
                "reset": false
            },
            "darkTheme": {
                "default": "#097479",
                "baseColor": "#097479",
                "baseFont": "-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Oxygen-Sans,Ubuntu,Cantarell,Helvetica Neue,sans-serif",
                "edited": true,
                "reset": false
            },
            "customTheme": {
                "name": "Untitled Theme 1",
                "default": "#4B7930",
                "baseColor": "#4B7930",
                "baseFont": "-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Oxygen-Sans,Ubuntu,Cantarell,Helvetica Neue,sans-serif",
                "reset": false
            },
            "themeState": {
                "base-color": {
                    "default": "#097479",
                    "value": "#097479",
                    "edited": true
                },
                "page-titlebar-backgroundColor": {
                    "value": "#097479",
                    "edited": false
                },
                "page-backgroundColor": {
                    "value": "#111111",
                    "edited": false
                },
                "page-sidebar-backgroundColor": {
                    "value": "#333333",
                    "edited": false
                },
                "group-textColor": {
                    "value": "#0eb8c0",
                    "edited": false
                },
                "group-borderColor": {
                    "value": "#555555",
                    "edited": false
                },
                "group-backgroundColor": {
                    "value": "#333333",
                    "edited": false
                },
                "widget-textColor": {
                    "value": "#eeeeee",
                    "edited": false
                },
                "widget-backgroundColor": {
                    "value": "#097479",
                    "edited": false
                },
                "widget-borderColor": {
                    "value": "#333333",
                    "edited": false
                },
                "base-font": {
                    "value": "-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Oxygen-Sans,Ubuntu,Cantarell,Helvetica Neue,sans-serif"
                }
            },
            "angularTheme": {
                "primary": "indigo",
                "accents": "blue",
                "warn": "red",
                "background": "grey",
                "palette": "light"
            }
        },
        "site": {
            "name": "Technikzentrale - Messungen",
            "hideToolbar": "false",
            "allowSwipe": "true",
            "lockMenu": "true",
            "allowTempTheme": "false",
            "dateFormat": "DD.MM.YYYY",
            "sizes": {
                "sx": 48,
                "sy": 48,
                "gx": 6,
                "gy": 6,
                "cx": 6,
                "cy": 6,
                "px": 0,
                "py": 0
            }
        }
    },
    {
        "id": "5c6864631aa952b5",
        "type": "ui_group",
        "name": "Air Quality",
        "tab": "7d2b06ffee1c4579",
        "order": 1,
        "disp": true,
        "width": "8",
        "collapse": true,
        "className": ""
    },
    {
        "id": "160e81fb.f1c86e",
        "type": "ui_group",
        "name": "File Browser",
        "tab": "b63d1f91.68095",
        "order": 1,
        "disp": true,
        "width": "18",
        "collapse": false
    },
    {
        "id": "b63d1f91.68095",
        "type": "ui_tab",
        "name": "Files",
        "icon": "dashboard",
        "disabled": false,
        "hidden": false
    },
    {
        "id": "1f856171e108f03c",
        "type": "ui_group",
        "name": "PTC",
        "tab": "7d2b06ffee1c4579",
        "order": 2,
        "disp": true,
        "width": "6",
        "collapse": true,
        "className": ""
    },
    {
        "id": "d032679eda6014a4",
        "type": "ui_group",
        "name": "Typ K",
        "tab": "7d2b06ffee1c4579",
        "order": 3,
        "disp": true,
        "width": "6",
        "collapse": false,
        "className": ""
    },
    {
        "id": "32d96286b08de4db",
        "type": "ui_group",
        "name": "Control",
        "tab": "7d2b06ffee1c4579",
        "order": 4,
        "disp": true,
        "width": "6",
        "collapse": false,
        "className": ""
    },
    {
        "id": "0421e5b8e32239df",
        "type": "mqtt in",
        "z": "463027935fb6458f",
        "name": "",
        "topic": "tinkerforge/callback/industrial_ptc_bricklet/213x/temperature",
        "qos": "0",
        "datatype": "auto-detect",
        "broker": "629839eca15c1379",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 300,
        "y": 200,
        "wires": [
            [
                "c289cace50d2bef9",
                "0aeb8179fa4139ca"
            ]
        ]
    },
    {
        "id": "cebfa5fe45d6a40d",
        "type": "mqtt in",
        "z": "463027935fb6458f",
        "name": "",
        "topic": "tinkerforge/callback/thermocouple_v2_bricklet/WSg/temperature",
        "qos": "0",
        "datatype": "auto-detect",
        "broker": "629839eca15c1379",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 290,
        "y": 260,
        "wires": [
            [
                "8e310d63823ba58a",
                "3ae8073def95db41"
            ]
        ]
    },
    {
        "id": "21a9daa1d636cd34",
        "type": "link out",
        "z": "463027935fb6458f",
        "name": "toCSV",
        "mode": "link",
        "links": [
            "e35406ecc76ea8ab"
        ],
        "x": 895,
        "y": 260,
        "wires": []
    },
    {
        "id": "e9efa50da44bfd08",
        "type": "link out",
        "z": "463027935fb6458f",
        "name": "link out 1",
        "mode": "link",
        "links": [
            "58660564c15361ca"
        ],
        "x": 895,
        "y": 160,
        "wires": []
    },
    {
        "id": "d02d1dd7c08a8463",
        "type": "mqtt in",
        "z": "463027935fb6458f",
        "name": "",
        "topic": "tinkerforge/callback/#",
        "qos": "0",
        "datatype": "auto-detect",
        "broker": "629839eca15c1379",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 200,
        "y": 80,
        "wires": [
            [
                "d99094737ae51590"
            ]
        ]
    },
    {
        "id": "d99094737ae51590",
        "type": "debug",
        "z": "463027935fb6458f",
        "name": "debug 5",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 620,
        "y": 80,
        "wires": []
    },
    {
        "id": "2ef5470fc35ca1c4",
        "type": "comment",
        "z": "463027935fb6458f",
        "name": "Alle Topics abrufen",
        "info": "",
        "x": 190,
        "y": 20,
        "wires": []
    },
    {
        "id": "8e310d63823ba58a",
        "type": "change",
        "z": "463027935fb6458f",
        "name": "",
        "rules": [
            {
                "t": "move",
                "p": "payload.temperature",
                "pt": "msg",
                "to": "payload.temperature_typK",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 720,
        "y": 260,
        "wires": [
            [
                "21a9daa1d636cd34"
            ]
        ]
    },
    {
        "id": "c289cace50d2bef9",
        "type": "change",
        "z": "463027935fb6458f",
        "name": "",
        "rules": [
            {
                "t": "move",
                "p": "payload.temperature",
                "pt": "msg",
                "to": "payload.temperature_PTC",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 720,
        "y": 160,
        "wires": [
            [
                "e9efa50da44bfd08"
            ]
        ]
    },
    {
        "id": "3ae8073def95db41",
        "type": "link out",
        "z": "463027935fb6458f",
        "name": "TypK_toDashboard",
        "mode": "link",
        "links": [
            "54e9f608a49887d1"
        ],
        "x": 670,
        "y": 300,
        "wires": [],
        "l": true
    },
    {
        "id": "0aeb8179fa4139ca",
        "type": "link out",
        "z": "463027935fb6458f",
        "name": "PTC_toDashboard",
        "mode": "link",
        "links": [
            "dff352ab8c26ab17"
        ],
        "x": 670,
        "y": 200,
        "wires": [],
        "l": true
    },
    {
        "id": "c69f6f300cbb2caf",
        "type": "mqtt in",
        "z": "463027935fb6458f",
        "name": "",
        "topic": "tinkerforge/callback/air_quality_bricklet/#",
        "qos": "0",
        "datatype": "auto-detect",
        "broker": "629839eca15c1379",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 360,
        "y": 360,
        "wires": [
            [
                "6462532cb0dc3131",
                "4e47fd5e158dd79e"
            ]
        ]
    },
    {
        "id": "6462532cb0dc3131",
        "type": "change",
        "z": "463027935fb6458f",
        "name": "",
        "rules": [
            {
                "t": "move",
                "p": "payload.temperature",
                "pt": "msg",
                "to": "payload.temperature_AQB",
                "tot": "msg"
            },
            {
                "t": "move",
                "p": "payload.humidity",
                "pt": "msg",
                "to": "payload.humidity_AQB",
                "tot": "msg"
            },
            {
                "t": "move",
                "p": "payload.air_pressure",
                "pt": "msg",
                "to": "payload.air_pressure_AQB",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 670,
        "y": 360,
        "wires": [
            [
                "54f24e155db8b273"
            ]
        ]
    },
    {
        "id": "4e47fd5e158dd79e",
        "type": "link out",
        "z": "463027935fb6458f",
        "name": "AQB_toDashboard",
        "mode": "link",
        "links": [
            "e4a92dfe934559ca"
        ],
        "x": 670,
        "y": 400,
        "wires": [],
        "l": true
    },
    {
        "id": "54f24e155db8b273",
        "type": "link out",
        "z": "463027935fb6458f",
        "name": "toCSV",
        "mode": "link",
        "links": [
            "842eb6f91f7549cd"
        ],
        "x": 895,
        "y": 360,
        "wires": []
    },
    {
        "id": "e35406ecc76ea8ab",
        "type": "link in",
        "z": "9de851f9017f508c",
        "name": "temperature_Typ-K",
        "links": [
            "21a9daa1d636cd34"
        ],
        "x": 130,
        "y": 60,
        "wires": [
            [
                "a50e615a713a8190"
            ]
        ],
        "l": true
    },
    {
        "id": "a50e615a713a8190",
        "type": "function",
        "z": "9de851f9017f508c",
        "name": "Add timestamp",
        "func": "msg.payload.timestamp = new Date().toJSON();\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 540,
        "y": 220,
        "wires": [
            [
                "a0812e0aedb756f2"
            ]
        ]
    },
    {
        "id": "3f8c48d843d77c19",
        "type": "json",
        "z": "9de851f9017f508c",
        "name": "",
        "property": "payload",
        "action": "obj",
        "pretty": false,
        "x": 1210,
        "y": 220,
        "wires": [
            [
                "e51abd4fe2b5f2cd",
                "0e709fceb6f61c4a"
            ]
        ]
    },
    {
        "id": "0e709fceb6f61c4a",
        "type": "csv",
        "z": "9de851f9017f508c",
        "name": "",
        "sep": ",",
        "hdrin": true,
        "hdrout": "once",
        "multi": "one",
        "ret": "\\n",
        "temp": "timestamp,temperature_typK,temperature_PTC,air_pressure_AQB,temperature_AQB,humidity_AQB",
        "skip": "0",
        "strings": true,
        "include_empty_strings": false,
        "include_null_values": "",
        "x": 1350,
        "y": 220,
        "wires": [
            [
                "601e88de68518eb2",
                "cb362026e8c2e9d8"
            ]
        ],
        "info": "Hier die einzelnen Spalten einfügen und kopieren:\r\ntimestamp,temperature_typK,temperature_PTC,air_pressure_AQB,temperature_AQB,humidity_AQB"
    },
    {
        "id": "cb362026e8c2e9d8",
        "type": "file",
        "z": "9de851f9017f508c",
        "name": "Save File",
        "filename": "filename",
        "filenameType": "msg",
        "appendNewline": false,
        "createDir": false,
        "overwriteFile": "false",
        "encoding": "utf8",
        "x": 1520,
        "y": 220,
        "wires": [
            [
                "eafd71547f8b63c7"
            ]
        ]
    },
    {
        "id": "e51abd4fe2b5f2cd",
        "type": "debug",
        "z": "9de851f9017f508c",
        "name": "debug 3",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 1260,
        "y": 360,
        "wires": []
    },
    {
        "id": "601e88de68518eb2",
        "type": "debug",
        "z": "9de851f9017f508c",
        "name": "debug 4",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "filename",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 1460,
        "y": 360,
        "wires": []
    },
    {
        "id": "58660564c15361ca",
        "type": "link in",
        "z": "9de851f9017f508c",
        "name": "temperature_PTC",
        "links": [
            "e9efa50da44bfd08"
        ],
        "x": 130,
        "y": 100,
        "wires": [
            [
                "a50e615a713a8190"
            ]
        ],
        "l": true
    },
    {
        "id": "0556359fedb80292",
        "type": "debug",
        "z": "9de851f9017f508c",
        "name": "debug 7",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 900,
        "y": 360,
        "wires": []
    },
    {
        "id": "842eb6f91f7549cd",
        "type": "link in",
        "z": "9de851f9017f508c",
        "name": "AQB",
        "links": [
            "54f24e155db8b273"
        ],
        "x": 170,
        "y": 140,
        "wires": [
            [
                "a50e615a713a8190"
            ]
        ],
        "l": true
    },
    {
        "id": "a0812e0aedb756f2",
        "type": "switch",
        "z": "9de851f9017f508c",
        "name": "",
        "property": "active",
        "propertyType": "flow",
        "rules": [
            {
                "t": "true"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 770,
        "y": 220,
        "wires": [
            [
                "0556359fedb80292",
                "0bed99bb2612544f"
            ]
        ]
    },
    {
        "id": "63ddc4c1adabef00",
        "type": "ui_switch",
        "z": "9de851f9017f508c",
        "name": "",
        "label": "CSV-Export starten",
        "tooltip": "Die Speicherung als CSV-Datei ist so lange akitv, bis der Schalter erneut auf \"AUS\" gestellt wird.",
        "group": "32d96286b08de4db",
        "order": 1,
        "width": 0,
        "height": 0,
        "passthru": false,
        "decouple": "false",
        "topic": "active",
        "topicType": "flow",
        "style": "",
        "onvalue": "true",
        "onvalueType": "bool",
        "onicon": "",
        "oncolor": "",
        "offvalue": "false",
        "offvalueType": "bool",
        "officon": "",
        "offcolor": "",
        "animate": false,
        "className": "",
        "x": 530,
        "y": 100,
        "wires": [
            [
                "a2bd9d31970bb4b4"
            ]
        ]
    },
    {
        "id": "a2bd9d31970bb4b4",
        "type": "change",
        "z": "9de851f9017f508c",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "active",
                "pt": "flow",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 740,
        "y": 100,
        "wires": [
            []
        ]
    },
    {
        "id": "eafd71547f8b63c7",
        "type": "debug",
        "z": "9de851f9017f508c",
        "name": "debug 9",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 1700,
        "y": 220,
        "wires": []
    },
    {
        "id": "9505dad0b4a3ef73",
        "type": "link in",
        "z": "9de851f9017f508c",
        "name": "Filename",
        "links": [
            "69b1019603313bfa"
        ],
        "x": 840,
        "y": 40,
        "wires": [
            [
                "419754a5878be2d7",
                "9f7a1693aea9d984"
            ]
        ],
        "l": true
    },
    {
        "id": "419754a5878be2d7",
        "type": "debug",
        "z": "9de851f9017f508c",
        "name": "debug 11",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 1180,
        "y": 40,
        "wires": []
    },
    {
        "id": "9f7a1693aea9d984",
        "type": "function",
        "z": "9de851f9017f508c",
        "name": "Set Filename to flow",
        "func": "const path = \"/home/steffen/measurements/\";\nconst ending = \".csv\";\n\nvar name = flow.get(\"filename\") || \"first\";\nflow.set(\"filename\", path + msg.payload + ending);\n\nmsg.payload = flow.get(\"filename\");\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1020,
        "y": 100,
        "wires": [
            [
                "c23b0e1511621678"
            ]
        ]
    },
    {
        "id": "c23b0e1511621678",
        "type": "debug",
        "z": "9de851f9017f508c",
        "name": "debug 14",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 1300,
        "y": 100,
        "wires": []
    },
    {
        "id": "0bed99bb2612544f",
        "type": "change",
        "z": "9de851f9017f508c",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "filename",
                "pt": "msg",
                "to": "filename",
                "tot": "flow"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1030,
        "y": 220,
        "wires": [
            [
                "3f8c48d843d77c19"
            ]
        ]
    },
    {
        "id": "e434ba5948ccb2e5",
        "type": "function",
        "z": "9ab9769d30aa5a24",
        "name": "Calculation",
        "func": "msg.payload = msg.payload.temperature/100;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 330,
        "y": 240,
        "wires": [
            [
                "8b469c6e41ba807b",
                "639e07db12a64de5"
            ]
        ]
    },
    {
        "id": "8b469c6e41ba807b",
        "type": "ui_chart",
        "z": "9ab9769d30aa5a24",
        "name": "",
        "group": "d032679eda6014a4",
        "order": 1,
        "width": 0,
        "height": 0,
        "label": "Temperatur - Synology (außen)",
        "chartType": "line",
        "legend": "true",
        "xformat": "HH:mm:ss",
        "interpolate": "linear",
        "nodata": "",
        "dot": false,
        "ymin": "",
        "ymax": "",
        "removeOlder": "2",
        "removeOlderPoints": "",
        "removeOlderUnit": "3600",
        "cutout": 0,
        "useOneColor": false,
        "useUTC": false,
        "colors": [
            "#1f77b4",
            "#aec7e8",
            "#ff7f0e",
            "#2ca02c",
            "#98df8a",
            "#d62728",
            "#ff9896",
            "#9467bd",
            "#c5b0d5"
        ],
        "outputs": 1,
        "useDifferentColor": false,
        "className": "",
        "x": 650,
        "y": 240,
        "wires": [
            []
        ]
    },
    {
        "id": "54e9f608a49887d1",
        "type": "link in",
        "z": "9ab9769d30aa5a24",
        "name": "link in 1",
        "links": [
            "3ae8073def95db41"
        ],
        "x": 135,
        "y": 240,
        "wires": [
            [
                "e434ba5948ccb2e5"
            ]
        ]
    },
    {
        "id": "5a08f1f2af2ec5d2",
        "type": "ui_gauge",
        "z": "9ab9769d30aa5a24",
        "name": "",
        "group": "1f856171e108f03c",
        "order": 0,
        "width": 0,
        "height": 0,
        "gtype": "donut",
        "title": "Temperatur - Oberfläche Fritzbox",
        "label": "°C",
        "format": "{{value}}",
        "min": 0,
        "max": "100",
        "colors": [
            "#00b500",
            "#e6e600",
            "#ca3838"
        ],
        "seg1": "",
        "seg2": "",
        "diff": false,
        "className": "",
        "x": 660,
        "y": 320,
        "wires": []
    },
    {
        "id": "9c3723723933ecf7",
        "type": "function",
        "z": "9ab9769d30aa5a24",
        "name": "Calculation",
        "func": "msg.payload = msg.payload.temperature/100;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 330,
        "y": 320,
        "wires": [
            [
                "5a08f1f2af2ec5d2"
            ]
        ]
    },
    {
        "id": "dff352ab8c26ab17",
        "type": "link in",
        "z": "9ab9769d30aa5a24",
        "name": "link in 2",
        "links": [
            "0aeb8179fa4139ca"
        ],
        "x": 135,
        "y": 320,
        "wires": [
            [
                "9c3723723933ecf7"
            ]
        ]
    },
    {
        "id": "e4a92dfe934559ca",
        "type": "link in",
        "z": "9ab9769d30aa5a24",
        "name": "link in 3",
        "links": [
            "4e47fd5e158dd79e"
        ],
        "x": 135,
        "y": 420,
        "wires": [
            [
                "cb314735c7d9fcb1",
                "37d9e94e56c59d4a",
                "2371f0e6b1c7ae03",
                "010e00391e008984"
            ]
        ]
    },
    {
        "id": "97fb78ba3638df18",
        "type": "ui_gauge",
        "z": "9ab9769d30aa5a24",
        "name": "",
        "group": "5c6864631aa952b5",
        "order": 1,
        "width": "2",
        "height": "2",
        "gtype": "gage",
        "title": "Temperature",
        "label": "°C",
        "format": "{{value}}",
        "min": "-20",
        "max": "60",
        "colors": [
            "#008ee9",
            "#55e66a",
            "#ff4c24"
        ],
        "seg1": "",
        "seg2": "",
        "diff": false,
        "className": "",
        "x": 590,
        "y": 420,
        "wires": []
    },
    {
        "id": "cb314735c7d9fcb1",
        "type": "function",
        "z": "9ab9769d30aa5a24",
        "name": "AQB_temperature",
        "func": "msg.payload = msg.payload.temperature/100;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 330,
        "y": 420,
        "wires": [
            [
                "97fb78ba3638df18"
            ]
        ]
    },
    {
        "id": "37d9e94e56c59d4a",
        "type": "function",
        "z": "9ab9769d30aa5a24",
        "name": "AQB_humidity",
        "func": "msg.payload = msg.payload.humidity/100;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 320,
        "y": 480,
        "wires": [
            [
                "45578d419e7b5b83"
            ]
        ]
    },
    {
        "id": "2371f0e6b1c7ae03",
        "type": "function",
        "z": "9ab9769d30aa5a24",
        "name": "AQB_airPressure",
        "func": "msg.payload = msg.payload.air_pressure/100000;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 330,
        "y": 540,
        "wires": [
            [
                "cdac80159e525582"
            ]
        ]
    },
    {
        "id": "45578d419e7b5b83",
        "type": "ui_gauge",
        "z": "9ab9769d30aa5a24",
        "name": "",
        "group": "5c6864631aa952b5",
        "order": 1,
        "width": "2",
        "height": "2",
        "gtype": "gage",
        "title": "Humidity",
        "label": "%",
        "format": "{{value}}",
        "min": 0,
        "max": "100",
        "colors": [
            "#ff2600",
            "#44ee27",
            "#ff2600"
        ],
        "seg1": "40",
        "seg2": "60",
        "diff": false,
        "className": "",
        "x": 580,
        "y": 480,
        "wires": []
    },
    {
        "id": "010e00391e008984",
        "type": "debug",
        "z": "9ab9769d30aa5a24",
        "name": "debug 8",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 300,
        "y": 640,
        "wires": []
    },
    {
        "id": "cdac80159e525582",
        "type": "ui_text",
        "z": "9ab9769d30aa5a24",
        "group": "5c6864631aa952b5",
        "order": 2,
        "width": "3",
        "height": "1",
        "name": "",
        "label": "Air Pressure",
        "format": "{{msg.payload}} bar",
        "layout": "col-center",
        "className": "",
        "x": 590,
        "y": 540,
        "wires": []
    },
    {
        "id": "639e07db12a64de5",
        "type": "ui_gauge",
        "z": "9ab9769d30aa5a24",
        "name": "",
        "group": "d032679eda6014a4",
        "order": 3,
        "width": 0,
        "height": 0,
        "gtype": "gage",
        "title": "gauge",
        "label": "units",
        "format": "{{value}}",
        "min": 0,
        "max": "100",
        "colors": [
            "#00b500",
            "#e6e600",
            "#ca3838"
        ],
        "seg1": "",
        "seg2": "",
        "diff": false,
        "className": "",
        "x": 570,
        "y": 280,
        "wires": []
    },
    {
        "id": "fefc2f2f20acb71d",
        "type": "ui_text_input",
        "z": "9ab9769d30aa5a24",
        "name": "",
        "label": "Filename",
        "tooltip": "",
        "group": "32d96286b08de4db",
        "order": 3,
        "width": 0,
        "height": 0,
        "passthru": true,
        "mode": "text",
        "delay": 300,
        "topic": "topic",
        "sendOnBlur": true,
        "className": "",
        "topicType": "msg",
        "x": 180,
        "y": 100,
        "wires": [
            [
                "69b1019603313bfa"
            ]
        ]
    },
    {
        "id": "69b1019603313bfa",
        "type": "link out",
        "z": "9ab9769d30aa5a24",
        "name": "to CSV",
        "mode": "link",
        "links": [
            "9505dad0b4a3ef73"
        ],
        "x": 325,
        "y": 100,
        "wires": []
    },
    {
        "id": "4fa73dd9.83cca4",
        "type": "comment",
        "z": "c0bbce27fa066182",
        "name": "File Browser",
        "info": "1) Update the default folder in the Init node\n2) Update the default folder in the Reset node as well\n3) You can duplicate the Reset nodes and use them as saved shortcuts\n4) Check the Convert Timestamps function node if you want to see your dates in a different format. I just used the Javascript toISOString format.\n5) The Graph button can read any CSV file which have any number of values, but the first column always contains a timestamp column with javascript timestamp of the data point.",
        "x": 110,
        "y": 60,
        "wires": []
    },
    {
        "id": "993d7272.843ae",
        "type": "fs-file-lister",
        "z": "c0bbce27fa066182",
        "name": "Files",
        "start": "/home/pi",
        "pattern": "*.*",
        "folders": "*",
        "hidden": false,
        "lstype": "files",
        "path": true,
        "single": true,
        "depth": 0,
        "stat": true,
        "showWarnings": false,
        "x": 510,
        "y": 160,
        "wires": [
            [
                "dd88bd23.37cde",
                "3e094f82.15d6e"
            ]
        ]
    },
    {
        "id": "d185a45.2327a58",
        "type": "inject",
        "z": "c0bbce27fa066182",
        "name": "Init",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": 0.1,
        "topic": "change",
        "payload": "/home/steffen/measurements",
        "payloadType": "str",
        "x": 110,
        "y": 120,
        "wires": [
            [
                "3d4e5e51.bdf952"
            ]
        ]
    },
    {
        "id": "a715f7a4.a398a8",
        "type": "ui_button",
        "z": "c0bbce27fa066182",
        "name": "",
        "group": "160e81fb.f1c86e",
        "order": 1,
        "width": "2",
        "height": "1",
        "passthru": false,
        "label": "Refresh",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "icon": "refresh",
        "payload": "",
        "payloadType": "str",
        "topic": "refresh",
        "x": 100,
        "y": 160,
        "wires": [
            [
                "3d4e5e51.bdf952"
            ]
        ]
    },
    {
        "id": "eb17c7ee.e61988",
        "type": "ui_dropdown",
        "z": "c0bbce27fa066182",
        "name": "File Selector",
        "label": "",
        "tooltip": "",
        "place": "Select a file",
        "group": "160e81fb.f1c86e",
        "order": 9,
        "width": "5",
        "height": "1",
        "passthru": false,
        "multiple": false,
        "options": [
            {
                "label": "",
                "value": "",
                "type": "str"
            }
        ],
        "payload": "",
        "topic": "",
        "topicType": "str",
        "className": "",
        "x": 910,
        "y": 160,
        "wires": [
            [
                "be4830df.5775d"
            ]
        ]
    },
    {
        "id": "dd88bd23.37cde",
        "type": "function",
        "z": "c0bbce27fa066182",
        "name": "Format data",
        "func": "// format the data for the dropdown\nmsg.options = [];\nfor (var i=0; i<msg.payload.length; i++) {\n    // This is a file\n    // @ts-ignore\n    obj = {};\n    // @ts-ignore\n    obj [msg.payload[i].name.replace(/^.*(\\\\|\\/|\\:)/, '')]=msg.payload[i].name;\n    // @ts-ignore\n    msg.options.push(obj);\n}\nmsg.payload={};\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 710,
        "y": 160,
        "wires": [
            [
                "eb17c7ee.e61988"
            ]
        ]
    },
    {
        "id": "638728aa.cd0b08",
        "type": "ui_template",
        "z": "c0bbce27fa066182",
        "group": "160e81fb.f1c86e",
        "name": "",
        "order": 6,
        "width": "18",
        "height": "6",
        "format": "<div ng-bind-html=\"msg.payload\" height=\"400\" style=\"height: 400px;\"><br/>\n</div>\n\n",
        "storeOutMessages": true,
        "fwdInMessages": true,
        "templateScope": "local",
        "x": 1100,
        "y": 220,
        "wires": [
            []
        ]
    },
    {
        "id": "9d27e846.b31db8",
        "type": "template",
        "z": "c0bbce27fa066182",
        "name": "",
        "field": "payload",
        "fieldType": "msg",
        "format": "handlebars",
        "syntax": "mustache",
        "template": "<table width=\"100%\">\n    <tr><th>File Name</th><th>Size</th><th>Created</th><th>Changed</th></tr>\n    {{#payload}}\n        <tr>\n            <td><a href=\"/download?filename={{name}}\" target=\"blank\">{{fname}}</a></td>\n            <td>{{stat.size}}</td>\n            <td>{{stat.created}}</td>\n            <td>{{stat.changed}}</td>\n        </tr>\n    {{/payload}}\n</table>\n",
        "output": "str",
        "x": 940,
        "y": 220,
        "wires": [
            [
                "638728aa.cd0b08"
            ]
        ]
    },
    {
        "id": "3e094f82.15d6e",
        "type": "function",
        "z": "c0bbce27fa066182",
        "name": "Convert timestamps",
        "func": "for (var i=0; i<msg.payload.length; i++) {\n    msg.payload[i].stat.created = msg.payload[i].stat.created.toISOString().slice(0, 19).replace('T', ' ');\n    msg.payload[i].stat.changed = msg.payload[i].stat.changed.toISOString().slice(0, 19).replace('T', ' ');\n    msg.payload[i].stat.accessed = msg.payload[i].stat.accessed.toISOString().slice(0, 19).replace('T', ' ');\n    msg.payload[i].stat.statusChanged = msg.payload[i].stat.statusChanged.toISOString().slice(0, 19).replace('T', ' ');\n    msg.payload[i].fname = msg.payload[i].name.replace(/^.*(\\\\|\\/|\\:)/, '');\n}\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 740,
        "y": 220,
        "wires": [
            [
                "9d27e846.b31db8"
            ]
        ]
    },
    {
        "id": "7b7e0d58.05e244",
        "type": "ui_button",
        "z": "c0bbce27fa066182",
        "name": "",
        "group": "160e81fb.f1c86e",
        "order": 10,
        "width": "2",
        "height": "1",
        "passthru": false,
        "label": "Delete",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "className": "",
        "icon": "delete",
        "payload": "",
        "payloadType": "str",
        "topic": "",
        "topicType": "str",
        "x": 130,
        "y": 320,
        "wires": [
            [
                "8da8147a.999af8"
            ]
        ]
    },
    {
        "id": "7d490dd1.8458b4",
        "type": "function",
        "z": "c0bbce27fa066182",
        "name": "Get filename",
        "func": "// Get the filename from the flow context\nlet filename = flow.get(\"fileselected\");\n\n// check, if the filename is undefined that means it does not exist yet, nothing is selected yet\n// return: do not output anything\nif (filename===undefined) {\n    return;\n}\n\n// return the filename to the file-in node to delete\nmsg.filename = filename;\n\nif (msg.filename.replace(/^.*(\\\\|\\/|\\:)/, '')[0]!==\".\") {\n    // Only do this if this is a file, we don't delete folders\n    // and delete the context/selection as we are deleting the file as well\n    flow.set(\"fileselected\");\n    return msg;\n}",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 330,
        "y": 380,
        "wires": [
            [
                "372ee262.fc94de"
            ]
        ]
    },
    {
        "id": "372ee262.fc94de",
        "type": "file",
        "z": "c0bbce27fa066182",
        "name": "Delete file",
        "filename": "",
        "appendNewline": true,
        "createDir": false,
        "overwriteFile": "delete",
        "encoding": "none",
        "x": 540,
        "y": 380,
        "wires": [
            [
                "993d7272.843ae",
                "5219875b.c070d8"
            ]
        ]
    },
    {
        "id": "aa8c482.93734b8",
        "type": "http in",
        "z": "c0bbce27fa066182",
        "name": "",
        "url": "/download",
        "method": "get",
        "upload": false,
        "swaggerDoc": "",
        "x": 140,
        "y": 520,
        "wires": [
            [
                "d969ba04.e24028"
            ]
        ]
    },
    {
        "id": "d19cc7d8.646328",
        "type": "http response",
        "z": "c0bbce27fa066182",
        "name": "",
        "statusCode": "",
        "headers": {},
        "x": 930,
        "y": 520,
        "wires": []
    },
    {
        "id": "d969ba04.e24028",
        "type": "function",
        "z": "c0bbce27fa066182",
        "name": "Get the file name",
        "func": "msg.filename = msg.req.query.filename;\nmsg.contentdisposition = \"attachment; filename=\\\"\" + msg.req.query.filename.replace(/^.*(\\\\|\\/|\\:)/, '') + \"\\\"\";\nreturn msg;\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 390,
        "y": 520,
        "wires": [
            [
                "e92381c3.c4cd2"
            ]
        ],
        "outputLabels": [
            "Folder selected"
        ]
    },
    {
        "id": "e92381c3.c4cd2",
        "type": "file in",
        "z": "c0bbce27fa066182",
        "name": "",
        "filename": "",
        "format": "",
        "chunk": false,
        "sendError": false,
        "encoding": "none",
        "x": 580,
        "y": 520,
        "wires": [
            [
                "99ff4953.d0d5c8"
            ]
        ]
    },
    {
        "id": "99ff4953.d0d5c8",
        "type": "change",
        "z": "c0bbce27fa066182",
        "name": "Set Headers",
        "rules": [
            {
                "t": "set",
                "p": "headers",
                "pt": "msg",
                "to": "{}",
                "tot": "json"
            },
            {
                "t": "set",
                "p": "headers.content-type",
                "pt": "msg",
                "to": "text/csv",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "headers.Content-Disposition",
                "pt": "msg",
                "to": "contentdisposition",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 750,
        "y": 520,
        "wires": [
            [
                "d19cc7d8.646328"
            ]
        ]
    },
    {
        "id": "2519dd0d.54d6b2",
        "type": "ui_button",
        "z": "c0bbce27fa066182",
        "name": "",
        "group": "160e81fb.f1c86e",
        "order": 11,
        "width": "2",
        "height": "1",
        "passthru": false,
        "label": "Graph",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "icon": "show_chart",
        "payload": "",
        "payloadType": "str",
        "topic": "",
        "x": 90,
        "y": 640,
        "wires": [
            [
                "30f41c01.358a54"
            ]
        ]
    },
    {
        "id": "30f41c01.358a54",
        "type": "function",
        "z": "c0bbce27fa066182",
        "name": "Get filename",
        "func": "// Get the filename from the flow context\nlet filename = flow.get(\"fileselected\");\n\n// check, if the filename is undefined that means it does not exist yet, nothing is selected yet\n// return: do not output anything\nif (filename===undefined) {\n    return;\n}\n\n// return the filename to the file-in node to delete\nmsg.filename = filename;\n\nif (msg.filename.replace(/^.*(\\\\|\\/|\\:)/, '')[0]!==\".\") {\n    // Only do this if this is a file, we don't delete folders\n    return msg;\n}",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 260,
        "y": 640,
        "wires": [
            [
                "4f4072b6.0c320c"
            ]
        ]
    },
    {
        "id": "4f4072b6.0c320c",
        "type": "file in",
        "z": "c0bbce27fa066182",
        "name": "",
        "filename": "",
        "format": "utf8",
        "chunk": false,
        "sendError": false,
        "encoding": "none",
        "x": 440,
        "y": 640,
        "wires": [
            [
                "4d254665.d508e8"
            ]
        ]
    },
    {
        "id": "4d254665.d508e8",
        "type": "csv",
        "z": "c0bbce27fa066182",
        "name": "",
        "sep": ",",
        "hdrin": true,
        "hdrout": "",
        "multi": "mult",
        "ret": "\\n",
        "temp": "",
        "skip": "0",
        "strings": true,
        "x": 590,
        "y": 640,
        "wires": [
            [
                "7dcec769.580718"
            ]
        ]
    },
    {
        "id": "84810f0e.43f4e",
        "type": "debug",
        "z": "c0bbce27fa066182",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "x": 1010,
        "y": 600,
        "wires": []
    },
    {
        "id": "7dcec769.580718",
        "type": "function",
        "z": "c0bbce27fa066182",
        "name": "Format data for chart",
        "func": "var chart = [{\n    \"series\":[],\n    \"data\":[],\n    \"labels\":[msg.filename]\n}];\n\n\n/*\nvar pressure = [];\nvar out2 = [];\n\nfor (var i=0; i<msg.payload.length; i++) {\n    pressure.push({\"x\":msg.payload[i].timestamp, \"y\":msg.payload[i].pressure});\n    out2.push({\"x\":msg.payload[i].timestamp, \"y\":msg.payload[i].out2*200});\n\n}\nchart[0].data.push(pressure);\nchart[0].data.push(out2);\n*/\n\nlet columns = 0;\n\nfor(var series in msg.payload[0]) {\n    if(series!==\"timestamp\") {\n        chart[0].series.push(series);\n        chart[0].data.push([]);\n        columns++;\n    }\n}\n\n\nfor (var j=0; j<msg.payload.length; j++) {\n   for(var i=0;i<columns;i++) {\n       chart[0].data[i].push({\"x\":msg.payload[j].timestamp, \"y\":msg.payload[j][chart[0].series[i]]});\n   } \n}\n\n\n\n\nmsg.payload = chart;\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 800,
        "y": 640,
        "wires": [
            [
                "5022cb53.8adc44",
                "84810f0e.43f4e"
            ]
        ]
    },
    {
        "id": "5022cb53.8adc44",
        "type": "ui_chart",
        "z": "c0bbce27fa066182",
        "name": "",
        "group": "160e81fb.f1c86e",
        "order": 12,
        "width": "18",
        "height": "6",
        "label": "",
        "chartType": "line",
        "legend": "false",
        "xformat": "HH:mm:ss",
        "interpolate": "linear",
        "nodata": "",
        "dot": false,
        "ymin": "",
        "ymax": "",
        "removeOlder": 1,
        "removeOlderPoints": "",
        "removeOlderUnit": "3600",
        "cutout": 0,
        "useOneColor": false,
        "colors": [
            "#1f77b4",
            "#aec7e8",
            "#ff7f0e",
            "#2ca02c",
            "#98df8a",
            "#d62728",
            "#ff9896",
            "#9467bd",
            "#c5b0d5"
        ],
        "outputs": 1,
        "x": 1000,
        "y": 640,
        "wires": [
            []
        ]
    },
    {
        "id": "554f0095.ac1b2",
        "type": "ui_toast",
        "z": "c0bbce27fa066182",
        "position": "dialog",
        "displayTime": "3",
        "highlight": "",
        "sendall": false,
        "outputs": 1,
        "ok": "Yes",
        "cancel": "No",
        "raw": false,
        "className": "",
        "topic": "",
        "name": "Confirmation",
        "x": 510,
        "y": 320,
        "wires": [
            [
                "24df84fe.ebf45c"
            ]
        ]
    },
    {
        "id": "8da8147a.999af8",
        "type": "change",
        "z": "c0bbce27fa066182",
        "name": "Set message",
        "rules": [
            {
                "t": "set",
                "p": "topic",
                "pt": "msg",
                "to": "Delete confirmation",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "Are you sure you want to delete this file?",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 310,
        "y": 320,
        "wires": [
            [
                "554f0095.ac1b2"
            ]
        ]
    },
    {
        "id": "24df84fe.ebf45c",
        "type": "switch",
        "z": "c0bbce27fa066182",
        "name": "",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "Yes",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 710,
        "y": 320,
        "wires": [
            [
                "7d490dd1.8458b4"
            ]
        ]
    },
    {
        "id": "3d4e5e51.bdf952",
        "type": "function",
        "z": "c0bbce27fa066182",
        "name": "Folder handling",
        "func": "let folder = context.get(\"folder\");\nif (folder===undefined) {\n    folder=\"/\";\n    context.set(\"folder\", folder);\n}\n\nlet hidden = context.get(\"hidden\");\nif (hidden===undefined) {\n    hidden=false;\n    context.set(\"hidden\", hidden);\n}\n\nif (msg.topic===\"up\") {\n    var the_arr = folder.split('/');\n    the_arr.pop();\n    folder=the_arr.join('/'); \n    context.set(\"folder\", folder);\n}\nif (msg.topic===\"change\") {\n    folder=msg.payload;    \n    context.set(\"folder\", folder);\n}\nif (msg.topic===\"hidden\") {\n    hidden=msg.payload;    \n    context.set(\"hidden\", hidden);\n}\n\nmsg.payload = {\"start\":folder, \"hidden\": hidden};\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 300,
        "y": 220,
        "wires": [
            [
                "993d7272.843ae",
                "399ac341.7d43bc",
                "5219875b.c070d8"
            ]
        ]
    },
    {
        "id": "399ac341.7d43bc",
        "type": "ui_text",
        "z": "c0bbce27fa066182",
        "group": "160e81fb.f1c86e",
        "order": 4,
        "width": "9",
        "height": "1",
        "name": "",
        "label": "Folder:",
        "format": "{{msg.payload.start}}",
        "layout": "row-left",
        "x": 500,
        "y": 100,
        "wires": []
    },
    {
        "id": "b40ea1d8.c700a",
        "type": "ui_button",
        "z": "c0bbce27fa066182",
        "name": "",
        "group": "160e81fb.f1c86e",
        "order": 3,
        "width": "2",
        "height": "1",
        "passthru": false,
        "label": "Up",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "icon": "arrow_upwards",
        "payload": "",
        "payloadType": "str",
        "topic": "up",
        "x": 110,
        "y": 240,
        "wires": [
            [
                "3d4e5e51.bdf952"
            ]
        ]
    },
    {
        "id": "80940e39.5035b",
        "type": "ui_button",
        "z": "c0bbce27fa066182",
        "name": "",
        "group": "160e81fb.f1c86e",
        "order": 8,
        "width": "2",
        "height": "1",
        "passthru": false,
        "label": "Open",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "icon": "folder_open",
        "payload": "",
        "payloadType": "str",
        "topic": "",
        "x": 130,
        "y": 440,
        "wires": [
            [
                "8c1dfaac.979588"
            ]
        ]
    },
    {
        "id": "8c1dfaac.979588",
        "type": "function",
        "z": "c0bbce27fa066182",
        "name": "Change folder",
        "func": "// Get the filename from the flow context\nlet folderselected = flow.get(\"folderselected\");\n\n// check, if the filename is undefined that means it does not exist yet, nothing is selected yet\n// return: do not output anything\nif (folderselected===undefined) {\n    return;\n}\n\nmsg.topic = \"change\";\nmsg.payload = folderselected;\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 340,
        "y": 440,
        "wires": [
            [
                "3d4e5e51.bdf952"
            ]
        ]
    },
    {
        "id": "58414ec4.c716e",
        "type": "ui_button",
        "z": "c0bbce27fa066182",
        "name": "",
        "group": "160e81fb.f1c86e",
        "order": 2,
        "width": "2",
        "height": "1",
        "passthru": false,
        "label": "Reset",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "className": "",
        "icon": "autorenew",
        "payload": "/home/steffen",
        "payloadType": "str",
        "topic": "change",
        "topicType": "str",
        "x": 110,
        "y": 200,
        "wires": [
            [
                "3d4e5e51.bdf952"
            ]
        ]
    },
    {
        "id": "5219875b.c070d8",
        "type": "fs-file-lister",
        "z": "c0bbce27fa066182",
        "name": "Folders",
        "start": "/home/pi",
        "pattern": "*.*",
        "folders": "*",
        "hidden": false,
        "lstype": "directories",
        "path": true,
        "single": true,
        "depth": 0,
        "stat": true,
        "showWarnings": false,
        "x": 520,
        "y": 260,
        "wires": [
            [
                "ebc234be.d53fe8"
            ]
        ]
    },
    {
        "id": "37485c24.212054",
        "type": "ui_dropdown",
        "z": "c0bbce27fa066182",
        "name": "Folder Selector",
        "label": "",
        "tooltip": "",
        "place": "Select a folder",
        "group": "160e81fb.f1c86e",
        "order": 7,
        "width": "5",
        "height": "1",
        "passthru": false,
        "options": [
            {
                "label": "",
                "value": "",
                "type": "str"
            }
        ],
        "payload": "",
        "topic": "",
        "x": 920,
        "y": 260,
        "wires": [
            [
                "2875c79f.531558"
            ]
        ]
    },
    {
        "id": "ebc234be.d53fe8",
        "type": "function",
        "z": "c0bbce27fa066182",
        "name": "Format data",
        "func": "// format the data for the dropdown\nmsg.options = [];\nfor (var i=0; i<msg.payload.length; i++) {\n    // This is a foler\n    obj = {};\n    obj [\"[\"+msg.payload[i].name.replace(/^.*(\\\\|\\/|\\:)/, '')+\"]\"]=msg.payload[i].name;\n    msg.options.push(obj);\n}\nmsg.payload={};\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 710,
        "y": 260,
        "wires": [
            [
                "37485c24.212054"
            ]
        ]
    },
    {
        "id": "be4830df.5775d",
        "type": "change",
        "z": "c0bbce27fa066182",
        "name": "Save selection",
        "rules": [
            {
                "t": "set",
                "p": "fileselected",
                "pt": "flow",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1120,
        "y": 160,
        "wires": [
            []
        ]
    },
    {
        "id": "2875c79f.531558",
        "type": "change",
        "z": "c0bbce27fa066182",
        "name": "Save selection",
        "rules": [
            {
                "t": "set",
                "p": "folderselected",
                "pt": "flow",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1120,
        "y": 260,
        "wires": [
            []
        ]
    },
    {
        "id": "928e60a7.994be",
        "type": "ui_switch",
        "z": "c0bbce27fa066182",
        "name": "",
        "label": "Hidden",
        "tooltip": "Show hidden files or not",
        "group": "160e81fb.f1c86e",
        "order": 5,
        "width": "2",
        "height": "1",
        "passthru": false,
        "decouple": "false",
        "topic": "hidden",
        "style": "",
        "onvalue": "true",
        "onvalueType": "bool",
        "onicon": "check_box",
        "oncolor": "#000000",
        "offvalue": "false",
        "offvalueType": "bool",
        "officon": "check_box_outline_blank",
        "offcolor": "#000000",
        "x": 100,
        "y": 280,
        "wires": [
            [
                "3d4e5e51.bdf952"
            ]
        ]
    }
]